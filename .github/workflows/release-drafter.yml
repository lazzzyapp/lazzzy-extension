name: Release Drafter
  on:
  push:
    # branches to consider in the event; optional, defaults to all
    branches:
      - main
  # pull_request event is required only for autolabeler
  pull_request:
    # Only following types are handled by the action, but one can default to all as well
    types: [opened, reopened, synchronize]

  jobs:
    update_release_draft:
      runs-on: ubuntu-latest
      steps:  

      # You may pin to the exact commit or the version.
      # uses: release-drafter/release-drafter@fe52e97d262833ae07d05efaf1a239df3f1b5cd4
      - uses: release-drafter/release-drafter@v5.15.0
        with:
          name-template: 'v$RESOLVED_VERSION 🌈'
          tag-template: 'v$RESOLVED_VERSION'
          change-template: '- $TITLE @$AUTHOR (#$NUMBER)'
          change-title-escapes: '\<*_&' # You can add # and @ to disable mentions, and add ` to disable code blocks.
          categories:
            - title: '🚀 Features'
              labels:
                - 'feature'
                - 'enhancement'
            - title: '🐛 Bug Fixes'
              labels:
                - 'fix'
                - 'bugfix'
                - 'bug'
            - title: '🧰 Maintenance'
              label: 'chore'
          version-resolver:
            major:
              labels:
                - 'major'
            minor:
              labels:
                - 'minor'
            patch:
              labels:
                - 'patch'
            default: patch

          template: |
            ## Changes
            $CHANGES
          
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        # If your workflow requires multiple release-drafter configs it be helpful to override the config-name.
        # The config should still be located inside `.github` as that's where we are looking for config files.

        # config-name: # optional, default is release-drafter.yml
        # The name that will be used in the GitHub release that's created or updated.
        # This will override any `name-template` specified in your `release-drafter.yml` if defined.

        # name: # optional
        # The tag name to be associated with the GitHub release that's created or updated.
        # This will override any `tag-template` specified in your `release-drafter.yml` if defined.

       # tag: # optional
        # The version to be associated with the GitHub release that's created or updated.
        # This will override any version calculated by the release-drafter.

        # version: # optional
        # A boolean indicating whether the release being created or updated should be immediately published.

        #publish: true # optional, default is 
        # A boolean indicating whether the release being created or updated is a prerelease.

        #prerelease: # optional, default is 
        # The object that the release should be created to point to.

        #commitish: # optional, default is 
        # A boolean indicating whether the releaser mode is disabled.

        #disable-releaser: # optional, default is 
        # A boolean indicating whether the autolabeler mode is disabled.

        #disable-autolabeler: # optional, default is 
